;; The deps.edn file describes the information needed to build a classpath.
;;
;; When using the `clojure` or `clj` script, there are several deps.edn files
;; that are combined:
;; - install-level
;; - user level (this file)
;; - project level (current directory when invoked)
;;
;; For all attributes other than :paths, these config files are merged left to right.
;; Only the last :paths is kept and others are dropped.

{
  ;; Paths
  ;;   Directories in the current project to include in the classpath

  ;; :paths ["src"]

  ;; External dependencies
 
  :deps {
    org.clojure/clojure {:mvn/version "1.9.0"}

  }
  ;; :deps {
  ;;   org.clojure/clojure {:mvn/version "1.9.0"}
  ;; }

  ;; Aliases
	;;   resolve-deps aliases (-R) affect dependency resolution, options:
	;;     :extra-deps - specifies extra deps to add to :deps
	;;     :override-deps - specifies a coordinate to use instead of that in :deps
	;;     :default-deps - specifies a coordinate to use for a lib if one isn't found
	;;   make-classpath aliases (-C) affect the classpath generation, options:
	;;     :extra-paths - vector of additional paths to add to the classpath
	;;     :classpath-overrides - map of lib to path that overrides the result of resolving deps

  ;; :aliases {
  ;;   :deps {:extra-deps {org.clojure/tools.deps.alpha {:mvn/version "0.5.398"}}}
  ;;   :test {:extra-paths ["test"]}
  ;; }
  :aliases {:dev {:extra-deps {com.cemerick/pomegranate {:mvn/version "1.0.0"}
                               zcaudate/hara {:mvn/version "2.8.6"}
                               zcaudate/lucid {:mvn/version "1.4.4"}
                               rewrite-clj {:mvn/version "0.6.0"}
                               criterium {:mvn/version "0.4.4"}
                               org.clojure/tools.deps.alpha {:mvn/version "0.5.435"}
                               org.clojure/tools.namespace {:mvn/version "0.3.0-alpha4"}
                               org.clojure/tools.gitlibs {:mvn/version "0.2.64"}
                               org.clojure/tools.nrepl {:mvn/version "0.2.12"}
                               org.clojure/tools.trace {:mvn/version "0.7.9"}

                               org.clojure/java.classpath {:mvn/version "0.3.0"}
                               org.clojure/java.jmx {:mvn/version "0.3.4"}}}
            :data {:extra-deps {clojure.java-time {:mvn/version "0.3.2"}
                                org.clojure/data.csv {:mvn/version "0.1.4"}
                                org.clojure/data.json {:mvn/version "0.2.6"}
                                org.clojure/tools.reader {:mvn/version "1.2.1"}}}
            :rebel {:extra-deps {com.bhauman/rebel-readline {:mvn/version "0.1.3"}}
                    :main-opts ["-m" "rebel-readline.main"]}
            :test {:extra-paths ["test"]
                   :extra-deps {com.cognitect/test-runner {:git/url "git@github.com:cognitect-labs/test-runner"
                                                           :sha "78d380d00e7a27f7b835bb90af37e73b20c49bcc"}
                                org.clojure/test.check {:mvn/version "0.10.0-alpha3"}}
                   :main-opts ["-m" "cognitect.test-runner"]}
            :bench {:extra-deps {criterium {:mvn/version "0.4.4"}}}
            :deps {:extra-deps {org.clojure/tools.deps.alpha {:mvn/version "0.5.435"}}}
            :depstar {:extra-deps {com.healthfinch/depstar {:git/url "https://github.com/healthfinch/depstar.git"
                                                            :sha "68f3a04f75c988fa032974e8c600c9086812e9ef"}}}}

  ;; Provider attributes

  ;; :mvn/repos {
  ;;   "central" {:url "https://repo1.maven.org/maven2/"}
  ;;   "clojars" {:url "https://clojars.org/repo"}
  ;; }
}
